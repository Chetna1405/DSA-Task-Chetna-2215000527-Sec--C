class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int start = 1 ; 
        int n = piles.length ;
        int end = Integer.MIN_VALUE ;
        for(int i = 0 ; i < n ; i++){
            end = Math.max(end , piles[i]);
        }
        int result = -1 ;
        while(start <= end){
            int mid = start + (end - start) / 2 ;
            if(calculateSpeed(piles , h , mid)){
                result = mid ;
                end = mid - 1 ;
            }else{
                start = mid + 1 ; 
            }
        }
        return result ;
    }

    public boolean calculateSpeed(int[] piles , int h , int mid){
        int sum = 0 ;
        for(int i = 0 ; i < piles.length ; i++){
            sum += Math.ceil((double)piles[i] / mid);
        }
        if(sum <= h)
            return true ;
        return false ;
    }
}